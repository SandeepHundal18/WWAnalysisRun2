#include "../interface/initInputTree.h"

// Declaration of leaf types
unsigned int RunNum;
unsigned int EvtNum;
float METPt;
float METPhi;
unsigned int NJets;
unsigned int BTags;
unsigned int NVtx;
float selectedIDIsoElectronsPt[100];
float selectedIDIsoElectronsEta[100];
float selectedIDIsoElectronsPhi[100];
float selectedIDIsoElectronsE[100];
unsigned int selectedIDIsoElectronsNum;
float selectedIDIsoMuonsPt[100];
float selectedIDIsoMuonsEta[100];
float selectedIDIsoMuonsPhi[100];
float selectedIDIsoMuonsE[100];
unsigned int selectedIDIsoMuonsNum;
int GenBosonNum;
float GenBosonPt[100];
float GenBosonEta[100];
float GenBosonPhi[100];
float GenBosonE[100];
int GenBoson_GenBosonPDGId[100];
int GenMuNum;
float GenMuPt[100];
float GenMuEta[100];
float GenMuPhi[100];
float GenMuE[100];
int GenElecNum;
float GenElecPt[100];
float GenElecEta[100];
float GenElecPhi[100];
float GenElecE[100];
int GenNuNum;
float GenNuPt[100];
float GenNuEta[100];
float GenNuPhi[100];
float GenNuE[100];
unsigned int JetsNum;
float JetsPt[100];
float JetsEta[100];
float JetsPhi[100];
float JetsE[100];
float Jets_bDiscriminator[100];
unsigned int AK8JetsNum;
float AK8JetsPt[100];
float AK8JetsEta[100];
float AK8JetsPhi[100];
float AK8JetsE[100];
float AK8Jets_prunedMass[100];
float AK8Jets_trimmedMass[100];
float AK8Jets_filteredMass[100];
float AK8Jets_tau1[100];
float AK8Jets_tau2[100];
float AK8Jets_tau3[100];

// List of branches
TBranch *b_RunNum; 
TBranch *b_EvtNum; 
TBranch *b_METPt; 
TBranch *b_METPhi; 
TBranch *b_NJets;
TBranch *b_BTags;
TBranch *b_NVtx;
TBranch *b_selectedIDIsoElectronsPt;
TBranch *b_selectedIDIsoElectronsEta;
TBranch *b_selectedIDIsoElectronsPhi;
TBranch *b_selectedIDIsoElectronsE;
TBranch *b_selectedIDIsoElectronsNum;
TBranch *b_selectedIDIsoMuonsPt;
TBranch *b_selectedIDIsoMuonsEta;
TBranch *b_selectedIDIsoMuonsPhi;
TBranch *b_selectedIDIsoMuonsE;
TBranch *b_selectedIDIsoMuonsNum;
TBranch *b_GenBosonNum;
TBranch *b_GenBosonPt;
TBranch *b_GenBosonEta;
TBranch *b_GenBosonPhi;
TBranch *b_GenBosonE;
TBranch *b_GenBoson_GenBosonPDGId;
TBranch *b_GenMuNum;
TBranch *b_GenMuPt;
TBranch *b_GenMuEta;
TBranch *b_GenMuPhi;
TBranch *b_GenMuE;
TBranch *b_GenElecNum;
TBranch *b_GenElecPt;
TBranch *b_GenElecEta;
TBranch *b_GenElecPhi;
TBranch *b_GenElecE;
TBranch *b_GenNuNum;
TBranch *b_GenNuPt;
TBranch *b_GenNuEta;
TBranch *b_GenNuPhi;
TBranch *b_GenNuE;
TBranch *b_JetsNum;
TBranch *b_JetsPt;
TBranch *b_JetsEta;
TBranch *b_JetsPhi;
TBranch *b_JetsE;
TBranch *b_Jets_bDiscriminator;
TBranch *b_AK8JetsNum;
TBranch *b_AK8JetsPt;
TBranch *b_AK8JetsEta;
TBranch *b_AK8JetsPhi;
TBranch *b_AK8JetsE;
TBranch *b_AK8Jets_prunedMass;
TBranch *b_AK8Jets_trimmedMass;
TBranch *b_AK8Jets_filteredMass;
TBranch *b_AK8Jets_tau1;
TBranch *b_AK8Jets_tau2;
TBranch *b_AK8Jets_tau3;

void InitTree(TChain* nt)
{
  nt->SetBranchAddress("RunNum", &RunNum, &b_RunNum);
  nt->SetBranchAddress("EvtNum", &EvtNum, &b_EvtNum);
  nt->SetBranchAddress("METPt", &METPt, &b_METPt);
  nt->SetBranchAddress("METPhi", &METPhi, &b_METPhi);
  nt->SetBranchAddress("NJets", &NJets, &b_NJets);
  nt->SetBranchAddress("BTags", &BTags, &b_BTags);
  nt->SetBranchAddress("NVtx", &NVtx, &b_NVtx);
  nt->SetBranchAddress("selectedIDIsoElectronsPt", selectedIDIsoElectronsPt, &b_selectedIDIsoElectronsPt);
  nt->SetBranchAddress("selectedIDIsoElectronsEta", selectedIDIsoElectronsEta, &b_selectedIDIsoElectronsEta);
  nt->SetBranchAddress("selectedIDIsoElectronsPhi", selectedIDIsoElectronsPhi, &b_selectedIDIsoElectronsPhi);
  nt->SetBranchAddress("selectedIDIsoElectronsE",  selectedIDIsoElectronsE, &b_selectedIDIsoElectronsE);
  nt->SetBranchAddress("selectedIDIsoElectronsNum", &selectedIDIsoElectronsNum, &b_selectedIDIsoElectronsNum);
  nt->SetBranchAddress("selectedIDIsoMuonsPt", selectedIDIsoMuonsPt, &b_selectedIDIsoMuonsPt);
  nt->SetBranchAddress("selectedIDIsoMuonsEta", selectedIDIsoMuonsEta, &b_selectedIDIsoMuonsEta);
  nt->SetBranchAddress("selectedIDIsoMuonsPhi", selectedIDIsoMuonsPhi, &b_selectedIDIsoMuonsPhi);
  nt->SetBranchAddress("selectedIDIsoMuonsE",  selectedIDIsoMuonsE, &b_selectedIDIsoMuonsE);
  nt->SetBranchAddress("selectedIDIsoMuonsNum", &selectedIDIsoMuonsNum, &b_selectedIDIsoMuonsNum);
  nt->SetBranchAddress("GenBosonNum",  &GenBosonNum, &b_GenBosonNum);
  nt->SetBranchAddress("GenBosonPt",  GenBosonPt, &b_GenBosonPt);
  nt->SetBranchAddress("GenBosonEta", GenBosonEta, &b_GenBosonEta);
  nt->SetBranchAddress("GenBosonPhi", GenBosonPhi, &b_GenBosonPhi);
  nt->SetBranchAddress("GenBosonE",   GenBosonE, &b_GenBosonE);
  nt->SetBranchAddress("GenBoson_GenBosonPDGId", GenBoson_GenBosonPDGId, &b_GenBoson_GenBosonPDGId);
  nt->SetBranchAddress("GenMuNum",  &GenMuNum, &b_GenMuNum);
  nt->SetBranchAddress("GenMuPt",  GenMuPt, &b_GenMuPt);
  nt->SetBranchAddress("GenMuEta", GenMuEta, &b_GenMuEta);
  nt->SetBranchAddress("GenMuPhi", GenMuPhi, &b_GenMuPhi);
  nt->SetBranchAddress("GenMuE",   GenMuE, &b_GenMuE);
  nt->SetBranchAddress("GenElecNum",  &GenElecNum, &b_GenElecNum);
  nt->SetBranchAddress("GenElecPt",  GenElecPt, &b_GenElecPt);
  nt->SetBranchAddress("GenElecEta", GenElecEta, &b_GenElecEta);
  nt->SetBranchAddress("GenElecPhi", GenElecPhi, &b_GenElecPhi);
  nt->SetBranchAddress("GenElecE",   GenElecE, &b_GenElecE);
  nt->SetBranchAddress("GenNuNum",  &GenNuNum, &b_GenNuNum);
  nt->SetBranchAddress("GenNuPt",  GenNuPt, &b_GenNuPt);
  nt->SetBranchAddress("GenNuEta", GenNuEta, &b_GenNuEta);
  nt->SetBranchAddress("GenNuPhi", GenNuPhi, &b_GenNuPhi);
  nt->SetBranchAddress("GenNuE",   GenNuE, &b_GenNuE);
  nt->SetBranchAddress("JetsPt",  JetsPt, &b_JetsPt);
  nt->SetBranchAddress("JetsEta", JetsEta, &b_JetsEta);
  nt->SetBranchAddress("JetsPhi", JetsPhi, &b_JetsPhi);
  nt->SetBranchAddress("JetsE",   JetsE, &b_JetsE);
  nt->SetBranchAddress("JetsNum",   &JetsNum, &b_JetsNum);
  nt->SetBranchAddress("Jets_bDiscriminator",  Jets_bDiscriminator, &b_Jets_bDiscriminator);
  nt->SetBranchAddress("AK8JetsPt",  AK8JetsPt, &b_AK8JetsPt);
  nt->SetBranchAddress("AK8JetsEta", AK8JetsEta, &b_AK8JetsEta);
  nt->SetBranchAddress("AK8JetsPhi", AK8JetsPhi, &b_AK8JetsPhi);
  nt->SetBranchAddress("AK8JetsE",   AK8JetsE, &b_AK8JetsE);
  nt->SetBranchAddress("AK8JetsNum",   &AK8JetsNum, &b_AK8JetsNum);
  nt->SetBranchAddress("AK8Jets_prunedMass", AK8Jets_prunedMass, &b_AK8Jets_prunedMass);
  nt->SetBranchAddress("AK8Jets_trimmedMass", AK8Jets_trimmedMass, &b_AK8Jets_trimmedMass);
  nt->SetBranchAddress("AK8Jets_filteredMass", AK8Jets_filteredMass, &b_AK8Jets_filteredMass);
  nt->SetBranchAddress("AK8Jets_tau1", AK8Jets_tau1, &b_AK8Jets_tau1);
  nt->SetBranchAddress("AK8Jets_tau2", AK8Jets_tau2, &b_AK8Jets_tau2);
  nt->SetBranchAddress("AK8Jets_tau3", AK8Jets_tau3, &b_AK8Jets_tau3);

}
